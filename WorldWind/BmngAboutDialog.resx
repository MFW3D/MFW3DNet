<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>