<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Plugins</name>
    </assembly>
    <members>
        <member name="M:YahooFlickr.Plugins.FlickrGUI.searchButton_Click(System.Object,System.EventArgs)">
            <summary>
            Button Press callback set the flickr plugin layer keyword
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:YahooFlickr.Plugins.FlickrPlugin">
            <summary>
            Main Plugin class - maintains a GUI and FlickrLayer
            </summary> 
        </member>
        <member name="T:YahooFlickr.Plugins.FlickrIconsLayer">
            <summary>
            Flickr Icons Display Layer. Shows Georeferenced Images
            </summary>
        </member>
        <member name="M:YahooFlickr.Plugins.FlickrIconsLayer.#ctor">
            <summary>
            Construct supporting Flickr objects
            </summary>
        </member>
        <member name="M:YahooFlickr.Plugins.FlickrIconsLayer.Initialize(WorldWind.DrawArgs)">
            <summary>
            Initialize graphics objects
            </summary>
            <param name="drawArgs"></param>
        </member>
        <member name="M:YahooFlickr.Plugins.FlickrIconsLayer.Dispose">
            <summary>
            Dispose Graphics objects
            </summary>
        </member>
        <member name="M:YahooFlickr.Plugins.FlickrIconsLayer.Update(WorldWind.DrawArgs)">
            <summary>
            This method updates the Icons to reflect only those in view
            </summary>
            <param name="drawArgs"></param>
        </member>
        <member name="M:YahooFlickr.Plugins.FlickrIconsLayer.GetPhotoCollection(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This method takes a bounding box and returns
            Photocollection covering the bounding box from
            cache or from downloaded data
            </summary>
            <param name="west"></param>
            <param name="south"></param>
            <param name="east"></param>
            <param name="north"></param>
            <returns></returns>
        </member>
        <member name="T:MeasureToolNewgen.Plugins.MeasureWinResult">
            <summary>
            Winforms class to show measurement results till
            the Worldwind Widgets mature
            </summary>
        </member>
        <member name="T:MeasureToolNewgen.Plugins.MeasureToolNG">
            <summary>
            Planimetric Measure Tool plug-in
            </summary>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureToolNG.Load">
            <summary>
            Plugin entry point 
            </summary>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureToolNG.Unload">
            <summary>
            Unload our plugin
            </summary>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureToolNG.ClearLines">
            <summary>
            Remove all the line segments
            </summary>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureToolNG.menuItemClicked(System.Object,System.EventArgs)">
            <summary>
            Measuretool is enabled via the menu
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureToolNG.KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Measure tool is activated via the M key
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureToolNG.PlotTerrain">
            <summary>
            Plot Terrrain Cross Section graph
            </summary>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureToolNG.ChangePluginStatus">
            <summary>
            Turn plugin on and off
            </summary>
        </member>
        <member name="T:MeasureToolNewgen.Plugins.LineAddHandler">
            <summary>
            Updates GUI with new length in line mode
            </summary>
            <param name="LengthText"></param>
        </member>
        <member name="T:MeasureToolNewgen.Plugins.PolyAddHandler">
            <summary>
            Update GUI with new area in polygon mode 
            </summary>
            <param name="AreaText"></param>
        </member>
        <member name="T:MeasureToolNewgen.Plugins.MeasureToolLayer">
            <summary>
            This class is a Mouse gesture sensitive
            Line Drawing class.
            The mouse gestures should function as follows
            in 
            1: Single Line mode
                * Left Click begins a single measurement line
                * Mouse move dynamically updates line
                * Second left click confirms the position of the line
                * Right Click clears points and restarts measurements
            2: Multiline Mode
                * Left Click begins Multilne
                * Mouse move as above
                * Each subsequent left click adds a segment to the line
                * Right Click completes the measurement
                * Second right click clears points and restarts measurements
            </summary>
        </member>
        <member name="P:MeasureToolNewgen.Plugins.MeasureToolLayer.GCLength">
            <summary>
            Get and sets length based on great circle calculation
            </summary>
        </member>
        <member name="P:MeasureToolNewgen.Plugins.MeasureToolLayer.TerrainLength">
            <summary>
            Gets and sets length based on following terrain
            </summary>
        </member>
        <member name="P:MeasureToolNewgen.Plugins.MeasureToolLayer.Nodes">
            <summary>
            Gets the Point3d array of nodes for the linefeature
            </summary>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureToolLayer.MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Respond to mouse movements with dynamic line
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureToolLayer.MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Store position of mouse click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureToolLayer.MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Add point or deactivate tool
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureToolLayer.MouseDragged">
            <summary>
            Detect drag to allow globe movements
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureToolLayer.MouseRightClick">
            <summary>
            Deactivate tool on right click
            </summary>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureToolLayer.CalcLength">
            <summary>
            This Method calculates total length of the linefeature
            </summary>
            <returns>Length of the line</returns>
        </member>
        <member name="T:MeasureToolNewgen.Plugins.MeasureAreaLayer">
            <summary>
            This class is used for area measurements
            extends polygon feature to be sensitive to
            mousemovements
            </summary>
        </member>
        <member name="P:MeasureToolNewgen.Plugins.MeasureAreaLayer.Nodes">
            <summary>
            Access measurement polygon nodes
            </summary>
        </member>
        <member name="P:MeasureToolNewgen.Plugins.MeasureAreaLayer.IsOn">
            <summary>
            Overridden ison method to disable point to go
            </summary>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureAreaLayer.#ctor(WorldWind.World,WorldWind.DrawArgs,WorldWind.LinearRing)">
            <summary>
            Constructor presets polygonfeature properties
            </summary>
            <param name="world"></param>
            <param name="drawArgs"></param>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureAreaLayer.Render(WorldWind.DrawArgs)">
            <summary>
            Allow changing of mouse cursor during rendering
            </summary>
            <param name="drawArgs"></param>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureAreaLayer.MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Respond to Mousemovements with dynamic polygon
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureAreaLayer.MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Store last mousedown point to detect dragging
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureAreaLayer.MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Complete click response, add point or deactivate tool
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureAreaLayer.MouseDragged">
            <summary>
            Allow movement of globe while measuring
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureAreaLayer.MouseRightClick">
            <summary>
            Deactivate tool on right click
            </summary>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureAreaLayer.CalcArea">
            <summary>
            Perform area calculations using planet model
            1.Basic calculation using sphere model
            2.Refinements using ellipsoid and terrain
            </summary>
            <returns></returns>
        </member>
        <member name="F:MeasureToolNewgen.Plugins.MeasureAreaLayer.QA">
            <summary>
            Calculate the polygon area using a spherical earth model
            </summary>
            <returns></returns>
        </member>
        <member name="F:MeasureToolNewgen.Plugins.MeasureAreaLayer.QB">
            <summary>
            Calculate the polygon area using a spherical earth model
            </summary>
            <returns></returns>
        </member>
        <member name="F:MeasureToolNewgen.Plugins.MeasureAreaLayer.QC">
            <summary>
            Calculate the polygon area using a spherical earth model
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureAreaLayer.Q(System.Double)">
            <summary>
            Ellipsoid helper method
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureAreaLayer.Qbar(System.Double)">
            <summary>
            Ellipsoid helper method
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureAreaLayer.G_begin_ellipsoid_polygon_area(System.Double,System.Double)">
            <summary>
            Initialize ellipsoid with axis length and eccentricity
            </summary>
            <param name="a">Semi-Major axis in Meters</param>
            <param name="e2">Ellipsoid eccentricity squared </param>
            <returns></returns>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureAreaLayer.G_ellipsoid_polygon_area(WorldWind.Point3d[])">
            <summary>
            Calculate area from a set of lat-lon points
            </summary>
            <param name="points">List of points</param>
            <returns></returns>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.MeasureAreaLayer.CalcEllipsoidArea">
            <summary>
            Calculate area of polygon based on ellipsoid
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeasureToolNewgen.Plugins.MeasureResult">
            <summary>
            This class displays measurement results in a Worldwind Style widget
            </summary>
        </member>
        <member name="T:MeasureToolNewgen.Plugins.TerrainGraphForm">
            <summary>
            Form to display the terrain profile plot
            </summary>
        </member>
        <member name="F:MeasureToolNewgen.Plugins.TerrainGraphForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.TerrainGraphForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MeasureToolNewgen.Plugins.TerrainGraphForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Apogee.MovieCreator.MovieRecorderDialog">
            <summary>
            Movie Recorder dialog
            </summary>
        </member>
        <member name="F:Apogee.MovieCreator.MovieRecorderDialog.frameHeight">
            <summary>
            Height of rendered images (pixels).
            </summary>
        </member>
        <member name="F:Apogee.MovieCreator.MovieRecorderDialog.frameWidth">
            <summary>
            Width of rendered images (pixels).
            </summary>
        </member>
        <member name="M:Apogee.MovieCreator.MovieRecorderDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Apogee.MovieCreator.MovieRecorderDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Apogee.MovieCreator.MovieRecorderDialog.buttonEdit_Click(System.Object,System.EventArgs)">
            <summary>
            Launch notepad with script for edit
            </summary>
        </member>
        <member name="T:Apogee.MovieCreator.MovieRecorder">
            <summary>
            Movie recording script.  Plays back a script file with camera positions 
            and records each frame to sequentially numbered Portable Network Graphics
            files on disk. Adds itself to the World Wind main menu's 
            Plugins menu -> Movie Recorder
            </summary>
        </member>
        <member name="M:Apogee.MovieCreator.MovieRecorder.Load">
            <summary>
            Plugin entry point - All plugins must implement this function
            </summary>
        </member>
        <member name="M:Apogee.MovieCreator.MovieRecorder.Unload">
            <summary>
            Close down
            </summary>
        </member>
        <member name="M:Apogee.MovieCreator.MovieRecorder.menuItemRecorder_Click(System.Object,System.EventArgs)">
            <summary>
            User selected the recorder from the main menu.
            </summary>
        </member>
        <member name="T:Apogee.MovieCreator.PathCamera">
            <summary>
            Camera that follows a path between a list of 
            key frames and triggers a save of each frame.
            </summary>
        </member>
        <member name="F:Apogee.MovieCreator.PathCamera.IsRecording">
            <summary>
            Set to true to enable recording of frames to disk.
            </summary>
        </member>
        <member name="F:Apogee.MovieCreator.PathCamera.PreRollTime">
            <summary>
            How long to wait after moving camera to allow imagery to load
            </summary>
        </member>
        <member name="F:Apogee.MovieCreator.PathCamera.StartFrame">
            <summary>
            Frame to start recording from.
            </summary>
        </member>
        <member name="F:Apogee.MovieCreator.PathCamera.EndFrame">
            <summary>
            Frame to end recording on.
            </summary>
        </member>
        <member name="F:Apogee.MovieCreator.PathCamera.OutputFilePattern">
            <summary>
            Saved filename pattern. "{0}" will 
            be replaced with the frame number
            </summary>
        </member>
        <member name="M:Apogee.MovieCreator.PathCamera.#ctor(WorldWind.WorldWindow,Apogee.MovieCreator.MovieRecorderDialog)">
            <summary>
            Our camera constructor
            </summary>
            <param name="worldWindow"></param>
        </member>
        <member name="M:Apogee.MovieCreator.PathCamera.Update(Microsoft.DirectX.Direct3D.Device)">
            <summary>
            Override the camera update position code with our own.
            </summary>
            <param name="device">The Direct3D device.</param>
        </member>
        <member name="M:Apogee.MovieCreator.PathCamera.LoadScript(System.String)">
            <summary>
            Loads the script file.
            </summary>
            <param name="scriptFile">Path and filename of the script 
            file containing the list of key frames.
            Format: FrameNumber;World Wind uri 
            The file must be sorted (frame number ascending)
            </param>
        </member>
        <member name="M:Apogee.MovieCreator.PathCamera.InterpolateLog(System.Single,System.Double,System.Double)">
            <summary>
            Find the interpolated value between start and end.
            </summary>
            <param name="t">0..1 (0=start, 1=end, anything between = interpolate)</param>
            <param name="start">Starting value</param>
            <param name="end">Ending value</param>
            <returns></returns>
        </member>
        <member name="M:Apogee.MovieCreator.PathCamera.InstallDefaultCamera">
            <summary>
            Restores the original camera for normal operation.
            </summary>
        </member>
        <member name="T:Apogee.MovieCreator.KeyFrame">
            <summary>
            Contains one key frame (line from script file)
            </summary>
        </member>
        <member name="M:Apogee.MovieCreator.KeyFrame.FromString(System.String)">
            <summary>
            Constructs a key frame from a script line.
            </summary>
        </member>
        <member name="P:Apogee.MovieCreator.KeyFrame.Orientation">
            <summary>
            The key frame rotation quaternion
            </summary>
        </member>
        <member name="P:Apogee.MovieCreator.KeyFrame.CameraOrientation">
            <summary>
            The key frame rotation quaternion
            </summary>
        </member>
        <member name="T:WorldWind.WMSBrowserNG">
            <summary>
            WMS Browser dialog.
            </summary>
        </member>
        <member name="M:WorldWind.WMSBrowserNG.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:WorldWind.WMSBrowserNG.treeOgcCaps_OperationDone(System.Object,System.EventArgs)">
            <summary>
            Call back after available layers returned from WMS url. 
            Populates the first node as the default selection in the 'specify layer title' text box. Enables 'Create Layer' group box (Save as XML) in the UI.
            If no layers are returned by URL, display message box error to the user.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:WorldWind.AnimatedEarthManager">
            <summary>
            Animated Earth Manager (animated playback)
            SVS Image Server: http://aes.gsfc.nasa.gov/documents/standards.html
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.#ctor(WorldWind.WorldWindow)">
            <summary>
            Initializes a new instance of the <see cref= "T:WorldWind.AnimatedEarthManager"/> class.
            </summary>
            <param name="worldWindow"></param>
        </member>
        <member name="P:WorldWind.AnimatedEarthManager.CurrentFrameInterval">
            <summary>
            The delay between frames while animating (milliseconds)
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.SetCaption(System.String)">
            <summary>
            Modifies the window title.
            </summary>
            <param name="caption"></param>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.IsSelectedChanged">
            <summary>
            Checks whether user selected a new layer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.updateCurrentProgressBar(System.Int32,System.Int32)">
            <summary>
            Updates progress bar (thread safe)
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.UpdateProgressBarFrame(System.Int32,System.Int32)">
            <summary>
            Updates frame progress bar 
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.RefreshCapabilities">
            <summary>
            Performs a complete (cache + server) refresh of layer info.
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.RefreshCapabilitiesFromUrl">
            <summary>
            Loads table of contents from server and populates the list box.
            PS: Not running in UI thread (Invoke when updating UI)
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.updateStatusBar(System.String)">
            <summary>
            Displays a message in the status bar (thread safe)
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.AddAnimationFrame(WorldWind.Net.WMSDownload)">
            <summary>
            Adds an image to the animation list
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.AnimateSlower">
            <summary>
            Slows down the animation.
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.AnimateFaster">
            <summary>
            Speeds up the animation.
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.StartAnimation">
            <summary>
            Start playing currently selected layer.
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.PauseAnimation">
            <summary>
            Stops the animation playback.
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.StopAnimation">
            <summary>
            Stops the animation playback.
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.buttonColorBar_Click(System.Object,System.EventArgs)">
            <summary>
            Fired when the legend display button is clicked.
            </summary>
        </member>
        <member name="M:WorldWind.AnimatedEarthManager.Downloader">
            <summary>
            Download thread runs this function.
            </summary>
        </member>
        <member name="P:WorldWind.WMSLayer.IsAnimation">
            <summary>
            Whether this layer has animation (more than one frame).
            </summary>
        </member>
        <member name="P:WorldWind.WMSLayer.AnimationFrameCount">
            <summary>
            The number of pictures in the animation.
            </summary>
        </member>
        <member name="M:WorldWind.WMSLayer.GetDateTimeFromWmsDate(System.String)">
            <returns>System.DateTime.MinValue if date string is incorrect format</returns>
        </member>
        <member name="T:WorldWind.AnimationState">
            <summary>
            State of animation playback
            </summary>
        </member>
        <member name="T:WorldWind.DynamicClouds">
            <summary>
            Summary description for DynamicClouds.
            </summary>
        </member>
        <member name="T:WorldWind.CMPlugins.ExternalLayerManager.ExternalLayerManager">
            <summary>
            Summary description for ExternalLayerManager.
            </summary>
        </member>
        <member name="F:WorldWind.CMPlugins.ExternalLayerManager.ExternalLayerManager.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.ExternalLayerManager.ExternalLayerManager.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.ExternalLayerManager.ExternalLayerManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:WorldWind.CMPlugins.ExternalLayerManager.ExternalLayerManager.KeyLayer">
            <summary>
            Layer selected for GetFeature request.
            Returns a QTS if the selected items is a WMS layer, otherwise returns null.
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.ExternalLayerManager.ExternalLayerManagerLoader.Load">
            <summary>
            Plugin entry point 
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.ExternalLayerManager.ExternalLayerManagerLoader.Unload">
            <summary>
            Unload our plugin
            </summary>
        </member>
        <member name="T:WorldWind.CMPlugins.OverviewForm.ImageTileCache">
            <summary>
            Summary description for ImageTileCache.
            </summary>
        </member>
        <member name="T:WorldWind.CMPlugins.OverviewForm.OverviewForm">
            <summary>
            Summary description for OverviewForm.
            </summary>
        </member>
        <member name="F:WorldWind.CMPlugins.OverviewForm.OverviewForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.OverviewForm.OverviewForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.OverviewForm.OverviewForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.OverviewForm.OverviewFormLoader.Load">
            <summary>
            Plugin entry point 
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.OverviewForm.OverviewFormLoader.Unload">
            <summary>
            Unload our plugin
            </summary>
        </member>
        <member name="T:WorldWind.CMPlugins.OverviewForm.OverviewFormComponent">
            <summary>
            Summary description for OverviewFormComponent.
            </summary>
        </member>
        <member name="F:WorldWind.CMPlugins.OverviewForm.OverviewFormComponent.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.OverviewForm.OverviewFormComponent.Render">
            <summary>
            Render the scene.
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.OverviewForm.OverviewFormComponent.AttemptRecovery">
            <summary>
            Attempt to restore the 3D m_Device3d
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.OverviewForm.OverviewFormComponent.IsInDesignMode">
            <summary>
            Returns true if executing in Design mode (inside IDE)
            </summary>
            <returns></returns>
        </member>
        <member name="M:WorldWind.CMPlugins.OverviewForm.OverviewFormComponent.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.OverviewForm.OverviewFormComponent.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:WorldWind.CMPlugins.OverviewForm.OverviewToolbar">
            <summary>
            Summary description for OverviewToolbar.
            </summary>
        </member>
        <member name="F:WorldWind.CMPlugins.OverviewForm.OverviewToolbar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.OverviewForm.OverviewToolbar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.OverviewForm.OverviewToolbar.IsInDesignMode">
            <summary>
            Returns true if executing in Design mode (inside IDE)
            </summary>
            <returns></returns>
        </member>
        <member name="M:WorldWind.CMPlugins.OverviewForm.OverviewToolbar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:WorldWind.CMPlugins.OverviewForm.OverviewToolbar.AttemptRecovery">
            <summary>
            Attempt to restore the 3D m_Device3d
            </summary>
        </member>
        <member name="T:WorldWind.CMPlugins.OverviewForm.ResourceCache">
            <summary>
            Summary description for ResourceCache.
            </summary>
        </member>
        <member name="T:WorldWind.FileLoader">
            <summary>
            GUI to select a file or url to load
            </summary>
        </member>
        <member name="F:WorldWind.FileLoader.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WorldWind.FileLoader.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:WorldWind.FileLoader.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:WorldWind.FileLoader.#ctor">
            <summary>
            Constructor for the file loader GUI
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:WorldWind.FileLoader.#ctor(System.String)">
            <summary>
            Constructor for the file loader GUI
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:WorldWind.GotoDialog">
            <summary>
            Place Finder (placename search) dialog
            </summary>
        </member>
        <member name="M:WorldWind.GotoDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:WorldWind.GotoDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:WorldWind.GotoDialog.#ctor(WorldWind.WorldWindow,WorldXmlDescriptor.WorldType,System.String)">
            <summary>
            Initializes a new instance of the <see cref= "T:WorldWind.GotoDialog"/> class.
            </summary>
            <param name="ww"></param>
            <param name="currentWorld"></param>
            <param name="worldsXMLFilePath"></param>
        </member>
        <member name="M:WorldWind.GotoDialog.PositionUpDowns_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Enter key in Longitude/latitude/altitude = "Go"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:WorldWind.PathMaker">
            <summary>
            Summary description for PathMaker.
            </summary>
        </member>
        <member name="F:WorldWind.PathMaker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WorldWind.PathMaker.#ctor(WorldWind.WorldWindow)">
            <summary>
            Initializes a new instance of the <see cref= "T:WorldWind.PathMaker"/> class.
            </summary>
            <param name="ww"></param>
        </member>
        <member name="M:WorldWind.PathMaker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:WorldWind.PathMaker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:WorldWind.PlaceBuilder">
            <summary>
            Summary description for PlaceBuilder.
            </summary>
        </member>
        <member name="F:WorldWind.PlaceBuilder.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WorldWind.PlaceBuilder.#ctor(WorldWind.WorldWindow)">
            <summary>
            Initializes a new instance of the <see cref= "T:WorldWind.PlaceBuilder"/> class.
            </summary>
            <param name="ww"></param>
        </member>
        <member name="M:WorldWind.PlaceBuilder.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:WorldWind.PlaceBuilder.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:WorldWind.PlaceBuilder.updateStatusBar(System.String)">
            <summary>
            Updates status bar message (thread safe)
            </summary>
        </member>
        <member name="T:WorldWind.PlaceFinder">
            <summary>
            Summary description for PlaceFinder.
            </summary>
        </member>
        <member name="F:WorldWind.PlaceFinder.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WorldWind.PlaceFinder.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:WorldWind.PlaceFinder.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:WorldWind.PlaceFinder.SearchOnline">
            <summary>
            Search WWC's placename db
            </summary>
        </member>
        <member name="M:WorldWind.PlaceFinder.gmSearch_Click(System.Object,System.EventArgs)">
            <summary>
            The Google API Key registered against http://worldwind.arc.nasa.gov/
            is ABQIAAAACa4WGp5Uv52H7G0K5NI5sBTvg4F4NXNiK5VsCB5rxeWSfz3KRBROXKeNOov5-8cqJUzDuisDCCxI2Q
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:WorldWind.PlaceFinderLoader.Load">
            <summary>
            Plugin entry point 
            </summary>
        </member>
        <member name="M:WorldWind.PlaceFinderLoader.Unload">
            <summary>
            Unload our plugin
            </summary>
        </member>
        <member name="T:WorldWind.PropertyBrowserForm">
            <summary>
            Property browser/edit dialog for debugging.
            </summary>
        </member>
        <member name="F:WorldWind.PropertyBrowserForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WorldWind.PropertyBrowserForm.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref= "T:WorldWind.RapidFireModisManager"/> class.
            </summary>
            <param name="selected">The object to display in the browser.</param>
            <param name="title">Dialog title.</param>
        </member>
        <member name="M:WorldWind.PropertyBrowserForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:WorldWind.PropertyBrowserForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:WorldWind.RapidFireModisManager">
            <summary>
            Rapid Fire MODIS form.
            </summary>
        </member>
        <member name="M:WorldWind.RapidFireModisManager.#ctor(WorldWind.WorldWindow)">
            <summary>
            Initializes a new instance of the <see cref= "T:WorldWind.RapidFireModisManager"/> class.
            </summary>
            <param name="ww"></param>
        </member>
        <member name="M:WorldWind.RapidFireModisManager.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:WorldWind.RapidFireModisManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:WorldWind.RapidFireModisManager.updateProgressBar(System.Int32,System.Int32)">
            <summary>
            Updates progress bar (thread safe)
            </summary>
        </member>
        <member name="T:WorldWind.Splash">
            <summary>
            The splash screen displayed while World Wind is loading.
            </summary>
        </member>
        <member name="F:WorldWind.Splash.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WorldWind.Splash.#ctor">
            <summary>
            Initializes a new instance of the <see cref= "T:WorldWind.Splash"/> class.
            </summary>
        </member>
        <member name="M:WorldWind.Splash.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="P:WorldWind.Splash.HasError">
            <summary>
            Set if an error is displayed.
            </summary>
        </member>
        <member name="M:WorldWind.Splash.SetText(System.String)">
            <summary>
            Display normal message on splash screen.
            </summary>
            <param name="message">Message to display on the splash screen</param>
        </member>
        <member name="M:WorldWind.Splash.SetError(System.String)">
            <summary>
            Display an error message on splash.  Splash will stay visible longer to alert the user.
            </summary>
            <param name="message">Message to display on the splash screen</param>
        </member>
        <member name="P:WorldWind.Splash.IsDone">
            <summary>
            True when splash is done displaying (timed out or user intervention)
            </summary>
        </member>
        <member name="M:WorldWind.Splash.GetStartupImage">
            <summary>
            Creates the splash/about box picture with version number.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WorldWind.Splash.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:WorldWind.TerrainManagerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:WorldWind.TerrainManagerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WorldWind.TerrainManagerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:WorldWind.WavingFlags">
            <summary>
            Summary description for WavingFOTW.
            </summary>
        </member>
        <member name="M:WorldWind.WavingFlags.Load">
            <summary>
            Plugin entry point - All plugins must implement this function
            </summary>
        </member>
        <member name="M:WorldWind.WavingFlags.Unload">
            <summary>
            Unloads our plugin
            </summary>
        </member>
        <member name="T:WorldWind.WMSBrowser">
            <summary>
            WMS Browser dialog.
            </summary>
        </member>
        <member name="M:WorldWind.WMSBrowser.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:WorldWind.WMSBrowser.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:WorldWind.WMSBrowser.UpdateAnimationSpeed">
            <summary>
            Sets the animation speed to match the trackbar's setting.
            </summary>
        </member>
        <member name="M:WorldWind.WMSBrowser.updateCurrentProgressBar(System.Int32,System.Int32)">
            <summary>
            Updates progress bar (thread safe)
            </summary>
        </member>
        <member name="M:WorldWind.WMSBrowser.UpdateStatusBar(System.String)">
            <summary>
            Displays a message in the status bar (thread safe)
            </summary>
        </member>
        <member name="M:WorldWind.WMSBrowser.ProcessDownloadedImage(WorldWind.Net.WMSDownload,System.IO.Stream)">
            <summary>
            Convert if requested and prepare downloaded data for display
            </summary>
        </member>
        <member name="M:WorldWind.WMSList.GetDateTimeFromWMSDate(System.String)">
            <summary>
            Parses WMS string dates.
            </summary>
            <param name="wmsDate">Input WMS date string.</param>
            <returns>Time converted to DateTime or DateTime.MinValue if date string is incorrect format.</returns>
        </member>
        <member name="T:Mashi.Stereo.AnaglyphStereo">
            <summary>
            The plugin (main class)
            </summary>
        </member>
        <member name="F:Mashi.Stereo.AnaglyphStereo.LayerName">
            <summary>
            Name displayed in layer manager
            </summary>
        </member>
        <member name="M:Mashi.Stereo.AnaglyphStereo.Load">
            <summary>
            Plugin entry point - All plugins must implement this function
            </summary>
        </member>
        <member name="M:Mashi.Stereo.AnaglyphStereo.Unload">
            <summary>
            Unloads our plugin
            </summary>
        </member>
        <member name="T:Mashi.Stereo.StereoLayer">
            <summary>
            Anaglyph Stereo layer
            </summary>
        </member>
        <member name="M:Mashi.Stereo.StereoLayer.#ctor(System.String,WorldWind.WorldWindow)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Mashi.Stereo.StereoLayer.Opacity">
            <summary>
            Opacity not available
            </summary>
        </member>
        <member name="P:Mashi.Stereo.StereoLayer.InterocularDistance">
            <summary>
            The distance separating the two eyes - percent of distance to target.
            </summary>
        </member>
        <member name="P:Mashi.Stereo.StereoLayer.FocusAngle">
            <summary>
            The convergence angle between left and right view in degree.
            </summary>
        </member>
        <member name="M:Mashi.Stereo.StereoLayer.Render(WorldWind.DrawArgs)">
            <summary>
            This is where we do our rendering
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:Mashi.Stereo.StereoLayer.RenderRightEye(WorldWind.DrawArgs,Microsoft.DirectX.Direct3D.Texture,WorldWind.Camera.CameraBase)">
            <summary>
            Render view from right eye
            </summary>
        </member>
        <member name="M:Mashi.Stereo.StereoLayer.Initialize(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Mashi.Stereo.StereoLayer.Update(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Mashi.Stereo.StereoLayer.Dispose">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Mashi.Stereo.StereoLayer.PerformSelectionAction(WorldWind.DrawArgs)">
            <summary>
            Gets called when user left clicks.
            RenderableObject abstract member (needed)
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:Mashi.Stereo.StereoLayer.OnDeviceLost(System.Object,System.EventArgs)">
            <summary>
            Direct3D device was lost or is resizing
            </summary>
        </member>
        <member name="T:Atmosphere.Plugin.Atmosphere">
            <summary>
            The plugin (main class)
            </summary>
        </member>
        <member name="F:Atmosphere.Plugin.Atmosphere.LayerName">
            <summary>
            Name displayed in layer manager
            </summary>
        </member>
        <member name="M:Atmosphere.Plugin.Atmosphere.Load">
            <summary>
            Plugin entry point - All plugins must implement this function
            </summary>
        </member>
        <member name="M:Atmosphere.Plugin.Atmosphere.Unload">
            <summary>
            Unloads our plugin
            </summary>
        </member>
        <member name="T:Atmosphere.Plugin.AtmosphereLayer">
            <summary>
            "Fake" atmosphere
            </summary>
        </member>
        <member name="M:Atmosphere.Plugin.AtmosphereLayer.#ctor(System.String,System.String,WorldWind.WorldWindow)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Atmosphere.Plugin.AtmosphereLayer.ReadSettings">
            <summary>
            Read saved settings from ini file
            </summary>
        </member>
        <member name="M:Atmosphere.Plugin.AtmosphereLayer.SaveSettings">
            <summary>
            Save settings in ini file
            </summary>
        </member>
        <member name="M:Atmosphere.Plugin.AtmosphereLayer.Render(WorldWind.DrawArgs)">
            <summary>
            This is where we do our rendering 
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:Atmosphere.Plugin.AtmosphereLayer.Initialize(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed) 
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Atmosphere.Plugin.AtmosphereLayer.Update(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Atmosphere.Plugin.AtmosphereLayer.Dispose">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Atmosphere.Plugin.AtmosphereLayer.PerformSelectionAction(WorldWind.DrawArgs)">
            <summary>
            Gets called when user left clicks.
            RenderableObject abstract member (needed)
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:Atmosphere.Plugin.AtmosphereLayer.BuildContextMenu(System.Windows.Forms.ContextMenu)">
            <summary>
            Fills the context menu with menu items specific to the layer.
            </summary>
        </member>
        <member name="M:Atmosphere.Plugin.AtmosphereLayer.OnPropertiesClick(System.Object,System.EventArgs)">
            <summary>
            Properties context menu clicked.
            </summary>
        </member>
        <member name="T:Atmosphere.Plugin.AtmosphereLayer.propertiesDialog">
            <summary>
            Properties Dialog
            </summary>
        </member>
        <member name="M:Atmosphere.Plugin.AtmosphereLayer.propertiesDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NASA.Plugins.BMNG">
            <summary>
            Summary description for BMNG.
            </summary>
        </member>
        <member name="M:NASA.Plugins.BMNG.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NASA.Plugins.BMNG.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NASA.Plugins.BmngAboutDialog">
            <summary>
            Summary description for BmngAboutDialog.
            </summary>
        </member>
        <member name="F:NASA.Plugins.BmngAboutDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NASA.Plugins.BmngAboutDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NASA.Plugins.BmngAboutDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:NASA.Plugins.Compass3DWidget.m_countHeight">
            <summary>
            CountHeight property value
            </summary>
        </member>
        <member name="F:NASA.Plugins.Compass3DWidget.m_countWidth">
            <summary>
            CountWidth property value
            </summary>
        </member>
        <member name="P:NASA.Plugins.Compass3DWidget.Location">
            New IWidget properties
            <summary>
            Location of this widget relative to the client area of the parent
            </summary>
        </member>
        <member name="P:NASA.Plugins.Compass3DWidget.WidgetSize">
            <summary>
            Size of widget in pixels
            </summary>
        </member>
        <member name="P:NASA.Plugins.Compass3DWidget.CountHeight">
            <summary>
            Whether this widget should count for height calculations - HACK until we do real layout
            </summary>
        </member>
        <member name="P:NASA.Plugins.Compass3DWidget.CountWidth">
            <summary>
            Whether this widget should count for width calculations - HACK until we do real layout
            </summary>
        </member>
        <member name="T:NASA.Plugins.NrlMryAboutDialog">
            <summary>
            Summary description for NrlMryAboutDialog.
            </summary>
        </member>
        <member name="F:NASA.Plugins.NrlMryAboutDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NASA.Plugins.NrlMryAboutDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NASA.Plugins.NrlMryAboutDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NASA.Plugins.NRLMontereyGlobal">
            <summary>
            Summary description for NRLMontereyGlobal.
            </summary>
        </member>
        <member name="M:NASA.Plugins.NRLMontereyGlobal.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NASA.Plugins.NRLMontereyGlobal.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NASA.Plugins.NRLWeatherLoader.Load">
            <summary>
            Plugin entry point 
            </summary>
        </member>
        <member name="M:NASA.Plugins.NRLWeatherLoader.Unload">
            <summary>
            Unload our plugin
            </summary>
        </member>
        <member name="F:NASA.Plugins.ScaleBarWidget.m_countHeight">
            <summary>
            CountHeight property value
            </summary>
        </member>
        <member name="F:NASA.Plugins.ScaleBarWidget.m_countWidth">
            <summary>
            CountWidth property value
            </summary>
        </member>
        <member name="P:NASA.Plugins.ScaleBarWidget.Location">
            New IWidget properties
            <summary>
            Location of this widget relative to the client area of the parent
            </summary>
        </member>
        <member name="P:NASA.Plugins.ScaleBarWidget.WidgetSize">
            <summary>
            Size of widget in pixels
            </summary>
        </member>
        <member name="P:NASA.Plugins.ScaleBarWidget.CountHeight">
            <summary>
            Whether this widget should count for height calculations - HACK until we do real layout
            </summary>
        </member>
        <member name="P:NASA.Plugins.ScaleBarWidget.CountWidth">
            <summary>
            Whether this widget should count for width calculations - HACK until we do real layout
            </summary>
        </member>
        <member name="T:Murris.Plugins.Compass">
            <summary>
            The plugin (main class)
            </summary>
        </member>
        <member name="F:Murris.Plugins.Compass.LayerName">
            <summary>
            Name displayed in layer manager
            </summary>
        </member>
        <member name="M:Murris.Plugins.Compass.Load">
            <summary>
            Plugin entry point - All plugins must implement this function
            </summary>
        </member>
        <member name="M:Murris.Plugins.Compass.Unload">
            <summary>
            Unloads our plugin
            </summary>
        </member>
        <member name="M:Murris.Plugins.Compass.control_VisibleChanged(System.Object,System.EventArgs)">
            <summary>
            Toggles visibility on the CompassLayer
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Murris.Plugins.CompassLayer">
            <summary>
            Compass
            </summary>
        </member>
        <member name="M:Murris.Plugins.CompassLayer.#ctor(System.String,System.String,WorldWind.WorldWindow)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Murris.Plugins.CompassLayer.ReadSettings">
            <summary>
            Read saved settings from ini file
            </summary>
        </member>
        <member name="M:Murris.Plugins.CompassLayer.SaveSettings">
            <summary>
            Save settings in ini file
            </summary>
        </member>
        <member name="M:Murris.Plugins.CompassLayer.Render(WorldWind.DrawArgs)">
            <summary>
            This is where we do our rendering 
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:Murris.Plugins.CompassLayer.Initialize(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed) 
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Murris.Plugins.CompassLayer.Update(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Murris.Plugins.CompassLayer.Dispose">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Murris.Plugins.CompassLayer.PerformSelectionAction(WorldWind.DrawArgs)">
            <summary>
            Gets called when user left clicks.
            RenderableObject abstract member (needed)
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:Murris.Plugins.CompassLayer.BuildContextMenu(System.Windows.Forms.ContextMenu)">
            <summary>
            Fills the context menu with menu items specific to the layer.
            </summary>
        </member>
        <member name="M:Murris.Plugins.CompassLayer.OnPropertiesClick(System.Object,System.EventArgs)">
            <summary>
            Properties context menu clicked.
            </summary>
        </member>
        <member name="T:Murris.Plugins.CompassLayer.propertiesDialog">
            <summary>
            Properties Dialog
            </summary>
        </member>
        <member name="M:Murris.Plugins.CompassLayer.propertiesDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Murris.Plugins.LightController">
            <summary>
            The plugin (main class)
            </summary>
        </member>
        <member name="M:Murris.Plugins.LightController.Load">
            <summary>
            Plugin entry point - All plugins must implement this function
            </summary>
        </member>
        <member name="M:Murris.Plugins.LightController.Unload">
            <summary>
            Unloads our plugin
            </summary>
        </member>
        <member name="T:Murris.Plugins.LightController.LightDialog">
            <summary>
            Properties Dialog
            </summary>
        </member>
        <member name="M:Murris.Plugins.LightController.LightDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Withak.Plugin.FloodLevelPlugin">
            <summary>
            The plugin (main class)
            </summary>
        </member>
        <member name="F:Withak.Plugin.FloodLevelPlugin.LayerName">
            <summary>
            Name displayed in layer manager
            </summary>
        </member>
        <member name="M:Withak.Plugin.FloodLevelPlugin.Load">
            <summary>
            Plugin entry point - All plugins must implement this function
            </summary>
        </member>
        <member name="M:Withak.Plugin.FloodLevelPlugin.Unload">
            <summary>
            Unloads our plugin
            </summary>
        </member>
        <member name="T:Withak.Plugin.FloodLevel">
            <summary>
            Sky dome
            </summary>
        </member>
        <member name="M:Withak.Plugin.FloodLevel.#ctor(System.String,WorldWind.WorldWindow)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Withak.Plugin.FloodLevel.Render(WorldWind.DrawArgs)">
            <summary>
            This is where we do our rendering 
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:Withak.Plugin.FloodLevel.Initialize(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed) 
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Withak.Plugin.FloodLevel.Update(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Withak.Plugin.FloodLevel.Dispose">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Withak.Plugin.FloodLevel.PerformSelectionAction(WorldWind.DrawArgs)">
            <summary>
            Gets called when user left clicks.
            RenderableObject abstract member (needed)
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:Withak.Plugin.FloodLevel.BuildContextMenu(System.Windows.Forms.ContextMenu)">
            <summary>
            Fills the context menu with menu items specific to the layer.
            </summary>
        </member>
        <member name="M:Withak.Plugin.FloodLevel.OnPropertiesClick(System.Object,System.EventArgs)">
            <summary>
            Properties context menu clicked.
            </summary>
        </member>
        <member name="M:Withak.Plugin.FloodLevel.MakeFloodMesh(Microsoft.DirectX.Direct3D.Device,System.Single,System.Double,System.Double,System.Double,System.Double,System.Drawing.Color)">
            <summary>
            Creates a rectangular portion of a spherical mesh
            </summary>
            <param name="device">The current direct3D drawing device.</param>
            <param name="radius">The sphere's radius</param>
            <returns></returns>
            <remarks>
            </remarks>
        </member>
        <member name="T:Withak.Plugin.FloodLevelForm">
            <summary>
            Properties form
            </summary>
        </member>
        <member name="F:Withak.Plugin.FloodLevelForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Withak.Plugin.FloodLevelForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Withak.Plugin.FloodLevelForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:jhuapl.sample.GeoRSSLoader">
            <summary>
            
            </summary>
        </member>
        <member name="P:jhuapl.sample.GeoRSSLoader.FeedLayer">
            <summary>
            This is the layer holding all geoRSS feeds
            </summary>
        </member>
        <member name="P:jhuapl.sample.GeoRSSLoader.WWCLayer">
            <summary>
            This is the test layer holding the WorldWindCentral feed
            </summary>
        </member>
        <member name="P:jhuapl.sample.GeoRSSLoader.GeoRSSMenu">
            <summary>
            The whiteboard menu item
            </summary>
        </member>
        <member name="T:jhuapl.sample.GeoRSSMenuButton">
            <summary>
            
            </summary>
        </member>
        <member name="T:jhuapl.sample.WhiteboardPlugin">
            <summary>
            
            </summary>
        </member>
        <member name="P:jhuapl.sample.WhiteboardPlugin.WbForm">
            <summary>
            This is the whiteboard form widget displayed on the worldwind window
            </summary>
        </member>
        <member name="P:jhuapl.sample.WhiteboardPlugin.WbLayer">
            <summary>
            This is the layer holding all whiteboard drawing elements
            </summary>
        </member>
        <member name="P:jhuapl.sample.WhiteboardPlugin.WbMenu">
            <summary>
            The whiteboard menu item
            </summary>
        </member>
        <member name="T:jhuapl.sample.WhiteboardMenuButton">
            <summary>
            
            </summary>
        </member>
        <member name="T:jhuapl.util.WiimoteHeadtracker">
            <summary>
            The plugin (main class)
            </summary>
        </member>
        <member name="M:jhuapl.util.WiimoteHeadtracker.Load">
            <summary>
            Plugin entry point 
            </summary>
        </member>
        <member name="M:jhuapl.util.WiimoteHeadtracker.Unload">
            <summary>
            Unloads our plugin
            </summary>
        </member>
        <member name="M:bNb.Plugins.GoogleMapsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:bNb.Plugins.GoogleMapsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:bNb.Plugins.VeReprojectTilesLayer.Initialize(WorldWind.DrawArgs)">
            <summary>
            Layer initialization code
            </summary>
        </member>
        <member name="M:bNb.Plugins.VeReprojectTilesLayer.Update(WorldWind.DrawArgs)">
            <summary>
            Update layer (called from worker thread)
            </summary>
        </member>
        <member name="M:bNb.Plugins.VeReprojectTilesLayer.Render(WorldWind.DrawArgs)">
            <summary>
            Draws the layer
            </summary>
        </member>
        <member name="M:bNb.Plugins.VeReprojectTilesLayer.Dispose">
            <summary>
            Cleanup when layer is disabled
            </summary>
        </member>
        <member name="M:bNb.Plugins.VeReprojectTilesLayer.PerformSelectionAction(WorldWind.DrawArgs)">
            <summary>
            Handle mouse click
            </summary>
            <returns>true if click was handled.</returns>
        </member>
        <member name="T:bNb.Plugins.VESettings">
            <summary>
            This class stores virtual earth settings
            </summary>
        </member>
        <member name="F:bNb.Plugins.VESettings.zoomlevel">
            <summary>
            Layer Zoom Level
            </summary>
        </member>
        <member name="F:bNb.Plugins.VESettings.layeron">
            <summary>
            Turn layer on
            </summary>
        </member>
        <member name="F:bNb.Plugins.VESettings.terrain">
            <summary>
            Turn terrain on
            </summary>
        </member>
        <member name="F:bNb.Plugins.VESettings.road">
            <summary>
            Layer types
            </summary>
        </member>
        <member name="M:bNb.Plugins.VESettings.LoadSettingsFromFile(System.String)">
            <summary>
            Loads a serialized instance of the settings from the specified file
            returns default values if the file doesn't exist or an error occurs
            </summary>
            <returns>The persisted settings from the file</returns>
        </member>
        <member name="M:bNb.Plugins.VESettings.SaveSettingsToFile(System.String,bNb.Plugins.VESettings)">
            <summary>
            Persists the settings to the specified filename
            </summary>
            <param name="file">The filename to use for saving</param>
            <param name="settings">The instance of the Settings class to persist</param>
        </member>
        <member name="P:bNb.Plugins.VeTile.UL">
            <summary>
            Coordinates at upper left edge of image
            </summary>
        </member>
        <member name="P:bNb.Plugins.VeTile.UR">
            <summary>
            Coordinates at upper right edge of image
            </summary>
        </member>
        <member name="P:bNb.Plugins.VeTile.LL">
            <summary>
            Coordinates at lower left edge of image
            </summary>
        </member>
        <member name="P:bNb.Plugins.VeTile.LR">
            <summary>
            Coordinates at lower right edge of image
            </summary>
        </member>
        <member name="T:bNb.Plugins.UV">
            <summary>
            Sorry for lack of description, but this struct is kinda difficult 
            to describe since it supports so many coordinate systems.
            </summary>
        </member>
        <member name="T:bNb.Plugins.Projection">
            <summary>
            C# wrapper for proj.4 projection filter
            http://proj.maptools.org/
            </summary>
        </member>
        <member name="M:bNb.Plugins.Projection.pj_inv(bNb.Plugins.UV,System.IntPtr)">
            <summary>
            XY -> Lat/lon
            </summary>
            <param name="uv"></param>
            <param name="projPJ"></param>
            <returns></returns>
        </member>
        <member name="M:bNb.Plugins.Projection.#ctor(System.String[])">
            <summary>
            Constructor.
            </summary>
            <param name="initParameters">Proj.4 style list of options.
            <sample>new string[]{ "proj=utm", "ellps=WGS84", "no.defs", "zone=32" }</sample>
            </param>
        </member>
        <member name="M:bNb.Plugins.Projection.Forward(bNb.Plugins.UV)">
            <summary>
            Forward (Go from specified projection to lat/lon)
            </summary>
            <param name="uv"></param>
            <returns></returns>
        </member>
        <member name="M:bNb.Plugins.Projection.Inverse(bNb.Plugins.UV)">
            <summary>
            Inverse (Go from lat/lon to specified projection)
            </summary>
            <param name="uv"></param>
            <returns></returns>
        </member>
        <member name="T:GpsTracker.CSVReader">
            <summary>
            A data-reader style interface for reading CSV files.
            </summary>
        </member>
        <member name="M:GpsTracker.CSVReader.#ctor">
            <summary>
            Create a new reader
            </summary>
        </member>
        <member name="M:GpsTracker.CSVReader.#ctor(System.IO.Stream)">
            <summary>
            Create a new reader for the given stream.
            </summary>
            <param name="s">The stream to read the CSV from.</param>
        </member>
        <member name="M:GpsTracker.CSVReader.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Create a new reader for the given stream and encoding.
            </summary>
            <param name="s">The stream to read the CSV from.</param>
            <param name="enc">The encoding used.</param>
        </member>
        <member name="M:GpsTracker.CSVReader.#ctor(System.String)">
            <summary>
            Creates a new reader for the given text file path.
            </summary>
            <param name="filename">The name of the file to be read.</param>
        </member>
        <member name="M:GpsTracker.CSVReader.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Creates a new reader for the given text file path and encoding.
            </summary>
            <param name="filename">The name of the file to be read.</param>
            <param name="enc">The encoding used.</param>
        </member>
        <member name="M:GpsTracker.CSVReader.GetCSVLine">
            <summary>
            Returns the fields for the next row of CSV data (or null if at eof)
            </summary>
            <returns>A string array of fields or null if at the end of file.</returns>
        </member>
        <member name="M:GpsTracker.CSVReader.GetCSVLine(System.String)">
            <summary>
            Returns the fields for sLine
            </summary>
            <returns>A string array of fields or null if sLine is null.</returns>
        </member>
        <member name="M:GpsTracker.CSVReader.Dispose">
            <summary>
            Disposes the CSVReader. The underlying stream is closed.
            </summary>
        </member>
        <member name="T:GpsTracker.CSVReaderException">
            <summary>
            Exception class for CSVReader exceptions.
            </summary>
        </member>
        <member name="M:GpsTracker.CSVReaderException.#ctor(System.String)">
            <summary>
            Constructs a new exception object with the given message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:GpsTracker.GpsTracker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GpsTracker.GpsTracker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GpsTracker.PlaybackControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GpsTracker.PlaybackControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GpsTracker.PlaybackControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:GpsTracker.GpsSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GpsTracker.GpsSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GpsTracker.GpsSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GpsTracker.GPSTrackerOverlay.Initialize(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed) 
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:GpsTracker.GPSTrackerOverlay.Render(WorldWind.DrawArgs)">
            <summary>
            This is where we do our rendering 
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:GpsTracker.GPSTrackerOverlay.PerformSelectionAction(WorldWind.DrawArgs)">
            <summary>
            Handle mouse click
            </summary>
        </member>
        <member name="M:GpsTracker.GPSTrackerOverlay.Dispose">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:GpsTracker.GPSTrackerFixInfo.Render(WorldWind.DrawArgs)">
            <summary>
            This is where we do our rendering 
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:GpsTracker.GPSTrackerFixInfo.Initialize(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed) 
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:GpsTracker.GPSTrackerFixInfo.Update(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:GpsTracker.GPSTrackerFixInfo.Dispose">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:GpsTracker.GPSTrackerFixInfo.PerformSelectionAction(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed)
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="T:GpsTracker.MessageMonitor">
            <summary>
            Summary description for MessageMonitor.
            </summary>
        </member>
        <member name="M:GpsTracker.MessageMonitor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GpsTracker.MessageMonitor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GpsTracker.POIName">
            <summary>
            Summary description for POIName.
            </summary>
        </member>
        <member name="F:GpsTracker.POIName.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GpsTracker.POIName.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:GpsTracker.POIName.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Mashiharu.Sample.Joystick">
            <summary>
            The plugin (main class)
            </summary>
        </member>
        <member name="M:Mashiharu.Sample.Joystick.Load">
            <summary>
            Plugin entry point 
            </summary>
        </member>
        <member name="M:Mashiharu.Sample.Joystick.Unload">
            <summary>
            Unloads our plugin
            </summary>
        </member>
        <member name="M:Mashiharu.Sample.Joystick.JoystickLoop">
            <summary>
            Background thread runs this function in a loop reading joystick state.
            </summary>
        </member>
        <member name="M:Mashiharu.Sample.Joystick.HandleJoystick">
            <summary>
            Time to update things again.
            </summary>
        </member>
        <member name="T:KMLPlugin.KMLImporter">
            <summary>
            Main plugin class
            </summary>
        </member>
        <member name="M:KMLPlugin.KMLImporter.Load">
            <summary>
            Loads this plugin. Initializes variables and adds layers and menu items
            </summary>
        </member>
        <member name="M:KMLPlugin.KMLImporter.Unload">
            <summary>
            Unloads this plugin. Removes layers and menu items
            </summary>
        </member>
        <member name="M:KMLPlugin.KMLImporter.LoadDiskKM(System.String)">
            <summary>
            Loads either a KML or KMZ file from disk
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:KMLPlugin.KMLImporter.Spawn_LoadKML(System.String)">
            <summary>
            Loads a KML file in a new thread
            </summary>
            <param name="path">The path to the KML file to load</param>
        </member>
        <member name="M:KMLPlugin.KMLImporter.LoadKMLFile">
            <summary>
            Loads a KML file
            </summary>
        </member>
        <member name="M:KMLPlugin.KMLImporter.WorldWindow_DragEnter(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            Checks if the object being dropped is a kml or kmz file
            </summary>
        </member>
        <member name="M:KMLPlugin.KMLImporter.WorldWindow_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            Handles dropping of a kml/kmz file (by loading that file)
            </summary>
        </member>
        <member name="M:KMLPlugin.KMLImporter.DragDropIsValid(System.Windows.Forms.DragEventArgs)">
            <summary>
            Determines if this plugin can handle the dropped item
            </summary>
        </member>
        <member name="M:KMLPlugin.KMLImporter.loadMenu_Click(System.Object,System.EventArgs)">
            <summary>
            Handles selecting and loading the selected KML/KMZ file
            </summary>
        </member>
        <member name="M:KMLPlugin.KMLImporter.Cleanup">
            <summary>
            Cleans up used resources
            </summary>
        </member>
        <member name="T:KMLPlugin.Napalm">
            <summary>
            Napalm autoupdater code
            </summary>
        </member>
        <member name="M:KMLPlugin.Napalm.#ctor">
            <summary>
            Empty private constructor, because this class only contains static methods
            </summary>
        </member>
        <member name="M:KMLPlugin.Napalm.Update(System.String,System.String)">
            <summary>
            Starts an async update
            </summary>
            <param name="PluginDirectory"></param>
            <param name="version"></param>
        </member>
        <member name="M:KMLPlugin.Napalm.WebUpdate(System.String,System.String)">
            <summary>
            Updates this plugin (and supporting files) from the internet
            </summary>
        </member>
        <member name="M:KMLPlugin.Napalm.GetHashBytes(System.String)">
            <summary>
            Gets a byte array representing the hash of a given string
            </summary>
            <param name="s">The string to hash</param>
            <returns>A byte array containing the hash</returns>
        </member>
        <member name="M:KMLPlugin.Napalm.NapalmIsEnabled(System.String)">
            <summary>
            Checks whether Napalm is enabled
            </summary>
            <param name="PluginDirectory">The directory that contains the key file</param>
            <returns>true if Napalm is enabled, false if Napalm is not enabled</returns>
        </member>
        <member name="M:KMLPlugin.Napalm.NapalmChangeStatus(System.String,System.Boolean)">
            <summary>
            Sets Napalm's enabled state
            </summary>
            <param name="PluginDirectory">The directory that contains the key file</param>
            <param name="bEnabled">Whether to enable Napalm</param>
            <returns>Whether Napalm was enabled</returns>
        </member>
        <member name="T:KMLPlugin.Settings">
            <summary>
            Stores settings and has methods to save/load these settings to/from a file
            </summary>
        </member>
        <member name="M:KMLPlugin.Settings.#ctor">
            <summary>
            Empty private constructor, because this class only contains static methods
            </summary>
        </member>
        <member name="M:KMLPlugin.Settings.LoadSettings(System.String)">
            <summary>
            Loads settings from an XML file
            </summary>
            <param name="file">The file to load from</param>
        </member>
        <member name="M:KMLPlugin.Settings.SaveSettings(System.String)">
            <summary>
            Saves settings to an XML file
            </summary>
            <param name="file">The file to save to</param>
        </member>
        <member name="T:KMLPlugin.WaitMessage">
            <summary>
            Renders a message to the lower right corner
            </summary>
        </member>
        <member name="M:KMLPlugin.WaitMessage.#ctor">
            <summary>
            Creates a new WaitMessage
            </summary>
        </member>
        <member name="M:KMLPlugin.WaitMessage.Render(WorldWind.DrawArgs)">
            <summary>
            This is where we do our rendering 
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:KMLPlugin.WaitMessage.Initialize(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed) 
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:KMLPlugin.WaitMessage.Update(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:KMLPlugin.WaitMessage.Dispose">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:KMLPlugin.WaitMessage.PerformSelectionAction(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed)
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="T:KMLPlugin.AboutForm">
            <summary>
            A Form with information about KMLImporter
            </summary>
        </member>
        <member name="M:KMLPlugin.AboutForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:KMLPlugin.AboutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MeasureTool.Plugins.MeasureTool">
            <summary>
            Planimetric Measure Tool plug-in
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureTool.Load">
            <summary>
            Plugin entry point 
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureTool.Unload">
            <summary>
            Unload our plugin
            </summary>
        </member>
        <member name="F:MeasureTool.Plugins.MeasureToolLayer.TexturePath">
            <summary>
            Tool texture path
            </summary>
        </member>
        <member name="F:MeasureTool.Plugins.MeasureToolLayer.StartLatitude">
            <summary>
            Latitude of measure start position
            </summary>
        </member>
        <member name="F:MeasureTool.Plugins.MeasureToolLayer.StartLongitude">
            <summary>
            Longitude of measure start position
            </summary>
        </member>
        <member name="F:MeasureTool.Plugins.MeasureToolLayer.EndLatitude">
            <summary>
            Latitude of measure end position
            </summary>
        </member>
        <member name="F:MeasureTool.Plugins.MeasureToolLayer.EndLongitude">
            <summary>
            Longitude of measure end position
            </summary>
        </member>
        <member name="F:MeasureTool.Plugins.MeasureToolLayer.Azimuth">
            <summary>
            Heading to go from start to end position. (0 = north)
            </summary>
        </member>
        <member name="F:MeasureTool.Plugins.MeasureToolLayer.Distance">
            <summary>
            Distance (meters) from start to end position
            </summary>
        </member>
        <member name="F:MeasureTool.Plugins.MeasureToolLayer.State">
            <summary>
            Current state of measuring operation
            </summary>
        </member>
        <member name="F:MeasureTool.Plugins.MeasureToolLayer.m_drawArgs">
            <summary>
            Multi line object; contains series of points.
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.#ctor(MeasureTool.Plugins.MeasureTool,WorldWind.DrawArgs)">
            <summary>
            Class to render measurement lines
            </summary>
            <param name="srcPlugin"></param>
            <param name="drawArgs"></param>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.BuildContextMenu(System.Windows.Forms.ContextMenu)">
            <summary>
            Fills the context menu with menu items specific to the layer.
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.OnPropertiesClick(System.Object,System.EventArgs)">
            <summary>
            Properties context menu clicked.
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.Initialize(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed) 
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.Update(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.Dispose">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.PerformSelectionAction(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed)
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.BuildMeasureLine(WorldWind.Angle)">
            <summary>
            Calculates the segments of the measure curve
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.IsMeasureLinePointVisible(System.Int32)">
            <summary>
            Checks if a point on the measure line is visible
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.FindAnchorPoint">
            <summary>
            Find the best visible point to "attach" the labelText to.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.CalcAngle(System.Int32,Microsoft.DirectX.Vector3)">
            <summary>
            Calculates the average angle in screen coordinates of the line segment before and after
            linePointNumber.
            </summary>
            <param name="linePointNumber">Index into the measureLine array.</param>
            <returns></returns>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.LoadTextures(System.String)">
            <summary>
            Loads or downloads the bitmaps
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.updateTextures(System.Object,System.EventArgs)">
            <summary>
            Load Result box texture
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.saveLine(System.Object,System.EventArgs)">
            <summary>
            Method to save a multi-point line. Will open up a dialog box.
            </summary>
            <param name="sender">The multi-point line to be saved.</param>
            <param name="e"></param>
        </member>
        <member name="T:MeasureTool.Plugins.MeasureToolLayer.MeasureLine">
            <summary>
            MeasureLine class: line object.
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.MeasureLine.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:MeasureTool.Plugins.MeasureToolLayer.MeasureLine.StartLatitude">
            <summary>
            Segment starting latitude
            </summary>
        </member>
        <member name="P:MeasureTool.Plugins.MeasureToolLayer.MeasureLine.StartLongitude">
            <summary>
            Segment starting longitude
            </summary>
        </member>
        <member name="P:MeasureTool.Plugins.MeasureToolLayer.MeasureLine.EndLatitude">
            <summary>
            Segment ending latitude
            </summary>
        </member>
        <member name="P:MeasureTool.Plugins.MeasureToolLayer.MeasureLine.EndLongitude">
            <summary>
            Segment ending longitude
            </summary>
        </member>
        <member name="P:MeasureTool.Plugins.MeasureToolLayer.MeasureLine.Linear">
            <summary>
            Measured linearDistance distance (as the crow flies)
            </summary>
        </member>
        <member name="P:MeasureTool.Plugins.MeasureToolLayer.MeasureLine.GroundTrack">
            <summary>
            Measured ground track length
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.MeasureLine.Render(WorldWind.DrawArgs)">
            <summary>
            Render the line segment
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.MeasureLine.Calculate(WorldWind.World,System.Boolean)">
            <summary>
            Calculates the segments of the measure curve
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.MeasureLine.CalculateElevatedPath(WorldWind.World)">
            <summary>
            Calculate this segment's ground track distance (meters)
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.MeasureLine.UpdateCoordinates">
            <summary>
            Update the lat/lon column
            </summary>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.MeasureLine.FormatDistance(System.Double)">
            <summary>
            Converts numeric distance (meters) to string of selected unit.
            </summary>
        </member>
        <member name="T:MeasureTool.Plugins.MeasureToolLayer.SaveMultiLine">
            <summary>
            Class to create save dialog for a multi-point line
            </summary>
        </member>
        <member name="F:MeasureTool.Plugins.MeasureToolLayer.SaveMultiLine.m_multiline">
            Multiline Object to be serialized
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.SaveMultiLine.writeShape(System.String)">
            <summary>
            Utility method to write shapefiles
            </summary>
            <param name="filename">Output Shapefile name</param>
        </member>
        <member name="M:MeasureTool.Plugins.MeasureToolLayer.SaveMultiLine.writeKML">
            <summary>
            Utility function to write KML strings for PolyLines/Polygons
            </summary>
            <returns></returns>
        </member>
        <member name="T:NLT.Plugins.ShapeFileInfoTool">
            <summary>
            retrieves information from shapefiles
            </summary>
        </member>
        <member name="M:NLT.Plugins.ShapeFileInfoTool.Load">
            <summary>
            Load the plugin
            </summary>
        </member>
        <member name="M:NLT.Plugins.ShapeFileInfoTool.Unload">
            <summary>
            Unload our plugin
            </summary>
        </member>
        <member name="T:NLT.Plugins.ShapeFileLoader">
            <summary>
            Summary description for ShapeFileLoader.
            </summary>
        </member>
        <member name="M:NLT.Plugins.ShapeFileLoader.UpdateXMLAndFiles(System.String,System.String)">
            <summary>
            Update XML and relative files
            </summary>
            <param name="shapeConfigFilePath"></param>
        </member>
        <member name="M:NLT.Plugins.ShapeFileLoader.loadZipFileFromURL(System.String)">
            <summary>
            Method to load Shape files from shape+xml zip packs supplied in URL
            </summary>
            <param name="zipURL"></param>
        </member>
        <member name="M:NLT.Plugins.ShapeFileLoader.loadShpFileFromURL(System.String)">
            <summary>
            Method to load Shape files from shp+dbf supplied in URL
            </summary>
            <param name="shpURL"></param>
        </member>
        <member name="M:NLT.Plugins.ShapeFileLoader.loadXMLFileFromURL(System.String)">
            <summary>
            Method to load Shape files from shp+shx+dbf supplied in URL
            </summary>
            <param name="xmlURL"></param>
        </member>
        <member name="M:NLT.Plugins.ShapeFileLoader.ShpDownloadComplete(WorldWind.Net.WebDownload)">
            <summary>
            Web download callback for shp+shx+dbf
            </summary>
        </member>
        <member name="M:NLT.Plugins.ShapeFileLoader.ZipDownloadComplete(WorldWind.Net.WebDownload)">
            <summary>
            Web download callback for Zips
            </summary>
        </member>
        <member name="M:NLT.Plugins.ShapeFileLoader.xmlRelatedFileDownloadComplete(WorldWind.Net.WebDownload)">
            <summary>
            Web download callback for Files relative to a xml
            used by loadXMLFileFromURL
            </summary>
        </member>
        <member name="M:NLT.Plugins.ShapeFileLoader.createXmlLoadShape(System.String)">
            <summary>
            This method generated a default configuration for a ShapeFile and loads it
            </summary>
            <param name="shapepath">Full Path to Shapefile being loaded</param>
        </member>
        <member name="M:NLT.Plugins.ShapeFileLoader.loadShapeFileWithAlreadyExistingXML(System.String,System.Boolean)">
            <summary>
            This method Loads a shapefile 
            </summary>
            <param name="shapeConfigFilePath">Full Path to the Shapefiles XML configuration file</param>
            <param name="checkForUpdate">true if it should check for a newer version of the shapefile</param>
        </member>
        <member name="M:NLT.Plugins.ShapeFileLoader.checkIfUpdateNeeded(System.String,System.String)">
            <summary>
            Method to check if the timestamp have a newer dateTime than the existing xml
            </summary>
            <param name="xmlPath"></param>
            <param name="oldXmlPath"></param>
        </member>
        <member name="T:Stars3D.Plugin.Stars3D">
            <summary>
            The plugin (main class)
            </summary>
        </member>
        <member name="F:Stars3D.Plugin.Stars3D.LayerName">
            <summary>
            Name displayed in layer manager
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3D.Load">
            <summary>
            Plugin entry point - All plugins must implement this function
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3D.Unload">
            <summary>
            Unloads our plugin
            </summary>
        </member>
        <member name="T:Stars3D.Plugin.Stars3DLayer">
            <summary>
            Sky dome
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3DLayer.#ctor(System.String,System.String,WorldWind.WorldWindow)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3DLayer.ReadSettings">
            <summary>
            Read saved settings from ini file
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3DLayer.SaveSettings">
            <summary>
            Save settings in ini file
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3DLayer.Render(WorldWind.DrawArgs)">
            <summary>
            This is where we do our rendering 
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3DLayer.Initialize(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed) 
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3DLayer.Update(WorldWind.DrawArgs)">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3DLayer.Dispose">
            <summary>
            RenderableObject abstract member (needed)
            OBS: Worker thread (don't update UI directly from this thread)
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3DLayer.PerformSelectionAction(WorldWind.DrawArgs)">
            <summary>
            Gets called when user left clicks.
            RenderableObject abstract member (needed)
            Called from UI thread = UI code safe in this function
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3DLayer.BuildContextMenu(System.Windows.Forms.ContextMenu)">
            <summary>
            Fills the context menu with menu items specific to the layer.
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3DLayer.OnPropertiesClick(System.Object,System.EventArgs)">
            <summary>
            Properties context menu clicked.
            </summary>
        </member>
        <member name="T:Stars3D.Plugin.Stars3DLayer.propertiesDialog">
            <summary>
            Properties Dialog
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3DLayer.propertiesDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Stars3D.Plugin.Stars3DLayer.ColoredSphere(Microsoft.DirectX.Direct3D.Device,System.Single,System.Int32,System.Int32)">
            <summary>
            Creates a PositionColored sphere centered on zero
            </summary>
            <param name="device">The current direct3D drawing device.</param>
            <param name="radius">The sphere's radius</param>
            <param name="slices">Number of slices (Horizontal resolution).</param>
            <param name="stacks">Number of stacks. (Vertical resolution)</param>
            <returns></returns>
            <remarks>
            Number of vertices in the sphere will be (slices+1)*(stacks+1)<br/>
            Number of faces	:slices*stacks*2
            Number of Indexes	: Number of faces * 3;
            </remarks>
        </member>
        <member name="T:Plugins.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Plugins.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Plugins.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Plugins.Properties.Resources.back">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Plugins.Properties.Resources.forward">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Plugins.Properties.Resources.go">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Plugins.Properties.Resources.outline">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Plugins.Properties.Resources.stop">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
    </members>
</doc>
